---
# Installs the kubernetes components for the control plane and the workers
# This script assumes docker is already installed using install_docker.yml

# Step 1: Install pre-requisites for all nodes in the cluster
- hosts: master.local worker1.local worker2.local
  become: yes
  vars:
    k8s_url_apt_key: "https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key"
    k8s_gpgpath: /usr/share/keyrings/kubernetes-apt-keyring.gpg
    k8s_repository: "https://pkgs.k8s.io/core:/stable:/v1.28/deb/"
    k8s_packages:
    - kubernetes-cni
    - kubelet

  tasks:
    - name: install_prerequisites
      apt:
        name:
          - qemu-guest-agent
          - ca-certificates
          - curl
          - apt-transport-https
          - gnupg
        update_cache: yes

    - name: Get Kubernetes package key
      shell: curl -fsSL {{ k8s_url_apt_key }} | gpg --dearmor -o {{ k8s_gpgpath }}
      args:
        creates: "{{ k8s_gpgpath }}"

    - name: Install Kubernetes repository
      apt_repository:
        filename: kubernetes
        repo: "deb [signed-by={{ k8s_gpgpath }}] {{ k8s_repository }} /"

    - name: Install Kubernetes Packages
      package: name={{ item }} state=present force=yes install_recommends=no
      loop: "{{ k8s_packages }}"

# Step 2: Install kubeadm on the master and configure it
- hosts: master.local
  become: yes
  vars:
    k8s_packages:
    - kubeadm
  tasks:
    - name: Install Kubernetes Master Packages
      package: name={{ item }} state=present force=yes install_recommends=no
      loop: "{{ k8s_packages }}"

    - name: Initialize Kubernetes master
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_output
      ignore_errors: yes

    - name: Set up kubectl for the current user
      command: "{{ item }}"
      with_items:
        - "mkdir -p $HOME/.kube"
        - "cp /etc/kubernetes/admin.conf $HOME/.kube/config"
        - "chown $(id -u):$(id -g) $HOME/.kube/config"

    - name: Install Calico network plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: "'calico' in kubeadm_output.stdout"

# Step 3: join the workers in the cluster
- hosts: worker1.local worker2.local
  become: yes
  tasks:
    - name: Join worker nodes to the cluster
      command: "{{ hostvars['master']['kubeadm_output']['stdout_lines'][0] }}"
      when: "'kubeadm join' in hostvars['master']['kubeadm_output']['stdout']"